import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'plotted_data.dart';
import 'package:http/http.dart' as http;

List<List<int>> data = [
  [222, 500, 39, 181, 92, 120, 395, 313, 113, 0, 26, 77, 90, 81, 97, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 97, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 395, 312, 113, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 180, 90, 118, 395, 313, 112, 0, 26, 78, 90, 80, 97, 95],
  [221, 500, 38, 180, 91, 119, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 180, 90, 118, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 97, 95],
  [221, 500, 38, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 97, 96],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 97, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 97, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 97, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 97, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 91, 119, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 180, 90, 118, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 90, 119, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 90, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 97, 95],
  [221, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 97, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 97, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 180, 90, 118, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 91, 119, 395, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 180, 90, 118, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 90, 119, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 90, 119, 395, 313, 112, 0, 26, 77, 90, 80, 96, 95],
  [221, 500, 38, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 77, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 77, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 91, 119, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 180, 90, 118, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 90, 119, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 180, 90, 119, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 39, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 181, 91, 119, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 91, 119, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 180, 90, 118, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 180, 90, 118, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 38, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 394, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [221, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 90, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 38, 181, 91, 119, 395, 313, 112, 0, 26, 78, 90, 80, 96, 95],
  [220, 500, 37, 180, 89, 118, 394, 312, 112, 0, 26, 78, 90, 80, 96, 95]
];

class PageState {
  final String mData;
  PageState(this.mData);
}

class PageController extends Cubit<PageState> {
  PageController() : super(PageState("No Data"));

  void update() async {}
  Future<void> fetchData() async {
    emit(PageState("fetching"));
    final response = await http.get(Uri.parse('/api/data'));
    if (response.statusCode == 200) {
      emit(PageState(response.body));
    } else {
      emit(PageState('error'));
    }
  }
}

class DemoPage extends StatelessWidget {
  const DemoPage({super.key});

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<PageController, PageState>(
      builder: (context, state) {
        return Scaffold(
          body: LayoutBuilder(
            builder: (context, constraints) {
              double screenWidth = constraints.maxWidth;
              double scaleFactor = screenWidth / 1512;
              double headerHeight = 207 * scaleFactor;
              double headerTextWidth = 653 * scaleFactor;
              double headerTextHeight = 224 * scaleFactor;

              return Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Stack(
                    children: [
                      SizedBox(
                        width: screenWidth,
                        height: headerHeight,
                        child: Image.asset(
                          'png_assets/header.png',
                          fit: BoxFit.cover,
                        ),
                      ),
                      Positioned(
                        top: 0,
                        left: 0,
                        child: SizedBox(
                          width: headerTextWidth,
                          height: headerTextHeight,
                          child: Image.asset(
                            'png_assets/headerText.png',
                            fit: BoxFit.contain,
                          ),
                        ),
                      ),
                    ],
                  ),
                  Text(state.mData),
                  //const SizedBox(height: 10),
                  Expanded(child: PlottedData(data)), // TODO fix this
                ],
              );
            },
          ),
        );
      },
    );
  }
}
